#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/assets/*/' do
  # don’t filter or layout
end

compile '/htaccess/' do
  # don't filter or layout
end

compile '/feed/' do
  filter :erb
end

compile '/sitemap/' do
  filter :erb
end

compile '/articles/*/' do
  if item.binary?
  else
    filter :kramdown

    layout 'article-single'
    layout 'default'
  end
end

compile '/articles/' do
  if item.binary?
  else
    layout 'article-listing'
    layout 'default'
  end
end

compile '/notes/*/' do
  if item.binary?
  else
    filter :kramdown

    layout 'article-single'
    layout 'default'
  end
end

compile '/notes/' do
  if item.binary?
  else
    layout 'notes-listing'
    layout 'default'
  end
end

compile '/' do
  layout 'frontpage'
  layout 'default'
end

compile '*' do
  if item.binary?
  else
    if item[:extension] == 'md'
      filter :kramdown
    end

    layout 'page-single'
    layout 'default'
  end
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    layout 'default'
  end
end

route 'assets/scss/*' do
  nil
end

route '/assets/css/*/' do
  item.identifier.chop + '.' + item[:extension]
end

route '/assets/js/*/' do
  item.identifier.chop + '.' + item[:extension]
end

route '/htaccess/' do
  '/.htaccess'
end

route '/feed/' do
  '/feed.xml'
end

route '/sitemap/' do
  '/sitemap.xml'
end

route '/articles/*' do
  if !item[:published]
    nil
  else
    item.identifier + 'index.html'
  end
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
